{"version":3,"sources":["helpers.js","App.sc.js","App.js","serviceWorker.js","index.js"],"names":["data","word","hint","getData","Math","floor","random","length","swing","keyframes","_templateObject","draw","_templateObject2","enter","_templateObject3","Container","styled","div","_templateObject4","LettersButton","button","_templateObject5","GameButton","_templateObject6","GuessWordContainer","_templateObject7","GuessWord","_templateObject8","props","fade","underline","Hint","_templateObject9","LetterOptions","_templateObject10","GameMenu","_templateObject11","HangingMan","svg","_templateObject12","HangZone","_templateObject13","Swingers","g","_templateObject14","animate","Frame","path","_templateObject15","Rope","_templateObject16","Head","circle","_templateObject17","Body","_templateObject18","Arms","_templateObject19","Legs","_templateObject20","App","_useState","useState","_useState2","Object","slicedToArray","fails","setFails","_useState3","_useState4","successes","setSuccesses","_useState5","_useState6","setData","_useState7","_useState8","prev","setPrev","_useState9","_useState10","startMenu","setStartMenu","threshold","useRef","selectLetter","letter","includes","count","match","RegExp","matches","Array","fill","map","concat","toConsumableArray","newGame","useEffect","onkeypress","e","key","current","react_default","a","createElement","className","preserveAspectRatio","viewBox","split","i","disabled","onClick","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cca9d69.chunk.js","sourcesContent":["export const letters = 'abcdefghijklmnopqrstuvwxyz';\n\nexport const data = [\n  {\n    word: 'javascript',\n    hint: 'the language of the web'\n  },\n  {\n    word: 'react',\n    hint: 'a front end framework known for using state'\n  },\n  {\n    word: 'angular',\n    hint: 'a front end framework with two way data binding'\n  },\n  {\n    word: 'docker',\n    hint: 'used to containerize applications'\n  },\n  {\n    word: 'node',\n    hint: 'a javascript runtime environment'\n  },\n  {\n    word: 'typescript',\n    hint: 'like javascript, but strongly typed'\n  }\n];\n\nexport const getData = () => {\n  return data[Math.floor(Math.random() * data.length)];\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst swing = keyframes`\n  0%,\n  50%,\n  100% {\n    transform: rotate(0);\n  }\n  25% {\n    transform: rotate(-1deg);\n  }\n  75% {\n    transform: rotate(1deg);\n  }\n`;\n\nconst draw = keyframes`\n  to {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst enter = keyframes`\n  from {\n    opacity: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  margin: auto;\n`;\n\nexport const LettersButton = styled.button`\n  cursor: pointer;\n  background: transparent;\n  font-size: 1.25rem;\n  color: #fff;\n  border: 1px solid #fff;\n  margin: 3px;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n\n  &:disabled {\n    background: transparent;\n    opacity: 0.2;\n  }\n`;\n\nexport const GameButton = styled(LettersButton)`\n  padding: 0 16px;\n  height: 44px;\n`;\n\nexport const GuessWordContainer = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n`;\n\nexport const GuessWord = styled.div`\n  place-items: center;\n  width: 2rem;\n  font-size: 2rem;\n  height: 3rem;\n  text-align: center;\n  margin: 10px;\n  opacity: ${props => (props.fade ? 0.3 : 1)};\n  transition: opacity 0.25s ease;\n\n  color: #fff;\n  ${props => props && props.underline && `border-bottom: 5px solid #fff;`};\n\n  @media (max-width: 414px) {\n    width: 1.3rem;\n  }\n`;\n\nexport const Hint = styled.div`\n  font-size: 1.4rem;\n  color: #fff;\n  animation: ${enter} 0.25s 0.25s ease both;\n  text-align: center;\n  padding: 20px;\n`;\n\nexport const LetterOptions = styled.div`\n  display: grid;\n  grid-gap: 2px;\n  grid-template-columns: repeat(9, 44px);\n  grid-template-rows: repeat(3, 44px);\n  grid-column: 1 / -1;\n  text-align: center;\n`;\n\nexport const GameMenu = styled.div`\n  color: #fff;\n  animation: ${enter} 0.25s 0.25s ease both;\n  text-align: center;\n  position: relative;\n`;\n\nexport const HangingMan = styled.svg`\n  height: 180px;\n  @media (min-width: 375px) and (min-height: 660px) {\n    height: 320px;\n  }\n  path,\n  circle {\n    animation-fill-mode: forwards;\n    stroke-linejoin: round;\n    stroke-linecap: round;\n    stroke-width: 5px;\n    fill: none;\n    stroke: #fff;\n  }\n`;\n\nexport const HangZone = styled.div`\n  display: block;\n  grid-column: 1 / -1;\n  text-align: center;\n`;\n\nexport const Swingers = styled.g`\n  transform-origin: 50% 0;\n  animation: ${swing} 3s infinite linear paused;\n  ${props => props.animate && `animation-play-state: running;`};\n`;\n\nexport const Frame = styled.path`\n  d: path('M 5 195 L 5 5 L 100 5 M 50 5 L 5 50');\n  stroke-dashoffset: 400;\n  stroke-dasharray: 400;\n  animation: ${draw} 2s 1s ease;\n`;\n\nexport const Rope = styled.path`\n  d: path('M 100 5 L 100 30');\n  stroke-dashoffset: 100;\n  stroke-dasharray: 100;\n  animation: ${draw} 1s ease;\n`;\n\nexport const Head = styled.circle`\n  cx: 100;\n  cy: 50;\n  r: 20;\n  stroke-dashoffset: 150;\n  stroke-dasharray: 150;\n  animation: ${draw} 1s ease;\n`;\n\nexport const Body = styled.path`\n  d: path('M 100 70 L 100 120');\n  stroke-dashoffset: 200;\n  stroke-dasharray: 200;\n  animation: ${draw} 1s ease;\n`;\n\nexport const Arms = styled.path`\n  d: path('M 90 110 L 100 80 L 110 110');\n  stroke-dashoffset: 300;\n  stroke-dasharray: 300;\n  animation: ${draw} 2s ease;\n`;\n\nexport const Legs = styled.path`\n  d: path('M 96 140 L 100 120 L 104 140');\n  stroke-dashoffset: 300;\n  stroke-dasharray: 300;\n  animation: ${draw} 2s ease;\n`;\n","import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { getData, letters } from './helpers';\nimport {\n  Container,\n  LettersButton,\n  HangZone,\n  HangingMan,\n  Hint,\n  Frame,\n  Swingers,\n  Rope,\n  Head,\n  Body,\n  Arms,\n  Legs,\n  GuessWord,\n  LetterOptions,\n  GameButton,\n  GameMenu,\n  GuessWordContainer\n} from './App.sc';\n\nconst App = () => {\n  const [fails, setFails] = useState([]);\n  const [successes, setSuccesses] = useState([]);\n  const [data, setData] = useState(getData());\n  const [prev, setPrev] = useState('');\n  const [startMenu, setStartMenu] = useState(true);\n  const threshold = useRef(5);\n\n  const selectLetter = letter => {\n    if (data.word.includes(letter)) {\n      const count = data.word.match(new RegExp(letter, 'g')).length;\n      const matches = new Array(count).fill().map(() => letter);\n      setSuccesses([...successes, ...matches]);\n    } else {\n      setFails([...fails, letter]);\n    }\n  };\n\n  const newGame = () => {\n    setData(getData());\n    // set previous word variable\n    setPrev(data.word);\n    setFails([]);\n    setSuccesses([]);\n  };\n\n  const menu = () => {\n    setStartMenu(false);\n  };\n\n  useEffect(() => {\n    onkeypress = e => {\n      if (\n        !startMenu &&\n        !successes.includes(e.key) &&\n        !fails.includes(e.key) &&\n        successes.length !== data.word.length &&\n        fails.length !== threshold.current\n      ) {\n        selectLetter(e.key);\n      } else {\n        return;\n      }\n    };\n  });\n\n  return (\n    <Container className=\"container\">\n      <HangZone>\n        <HangingMan preserveAspectRatio=\"xMinYMin\" viewBox=\"0 0 200 200\">\n          <Frame />\n          <Swingers animate={fails.length > 1}>\n            {fails.length >= 1 && <Rope />}\n            {fails.length >= 2 && <Head />}\n            {fails.length >= 3 && <Body />}\n            {fails.length >= 4 && <Arms />}\n            {fails.length >= 5 && <Legs />}\n          </Swingers>\n        </HangingMan>\n      </HangZone>\n      {/* catch repeated words */}\n      {data.word === prev && newGame()}\n      <GuessWordContainer className=\"word-container\">\n        {!startMenu &&\n          data.word &&\n          data.word.split('').map((letter, i) => {\n            return (\n              <GuessWord\n                className=\"letters\"\n                key={`letters--${i}`}\n                underline={true}\n                fade={!successes.includes(letter)}>\n                {' '}\n                {(successes.includes(letter) ||\n                  fails.length === threshold.current) &&\n                  letter}{' '}\n              </GuessWord>\n            );\n          })}\n      </GuessWordContainer>\n      <Hint>{!startMenu && data.hint}</Hint>\n      {!startMenu &&\n        data.word &&\n        fails.length !== threshold.current &&\n        successes.length !== data.word.length && (\n          <LetterOptions className=\"options\">\n            {letters.split('').map(letter => {\n              return (\n                <LettersButton\n                  disabled={\n                    successes.includes(letter) || fails.includes(letter)\n                  }\n                  key={`key--${letter}`}\n                  onClick={() => selectLetter(letter)}>\n                  {letter}\n                </LettersButton>\n              );\n            })}\n            <br />\n          </LetterOptions>\n        )}\n\n      {!startMenu &&\n        (fails.length !== threshold.current &&\n          successes.length !== data.word.length) && (\n          <Hint>*Try it with your keyboard!</Hint>\n        )}\n      {(fails.length === threshold.current ||\n        successes.length === data.word.length) &&\n        !startMenu && (\n          <GameMenu>\n            <h1>\n              {`${\n                successes.length === data.word.length\n                  ? 'YAY, YOU WIN!'\n                  : 'BOO, YOU LOSE!'\n              }`}\n            </h1>\n            <GameButton onClick={newGame}>New Game</GameButton>\n          </GameMenu>\n        )}\n      {startMenu && (\n        <GameMenu>\n          <h2>GUESS THE WEB DEV WORD!</h2>\n          <GameButton onClick={menu}>START</GameButton>\n        </GameMenu>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}