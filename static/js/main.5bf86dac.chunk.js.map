{"version":3,"sources":["helpers.js","App.sc.js","App.js","serviceWorker.js","index.js"],"names":["data","word","hint","getData","Math","floor","random","length","swing","keyframes","_templateObject","draw","_templateObject2","enter","_templateObject3","Container","styled","div","_templateObject4","LettersButton","button","_templateObject5","GameButton","_templateObject6","GuessWord","_templateObject7","props","fade","underline","Hint","_templateObject8","LetterOptions","_templateObject9","GameMenu","_templateObject10","HangingMan","svg","_templateObject11","HangZone","_templateObject12","Swingers","g","_templateObject13","animate","Frame","path","_templateObject14","Rope","_templateObject15","Head","circle","_templateObject16","Body","_templateObject17","Arms","_templateObject18","Legs","_templateObject19","App","_useState","useState","_useState2","Object","slicedToArray","fails","setFails","_useState3","_useState4","successes","setSuccesses","_useState5","_useState6","setData","_useState7","_useState8","prev","setPrev","_useState9","_useState10","startMenu","setStartMenu","threshold","useRef","newGame","react_default","a","createElement","className","preserveAspectRatio","viewBox","split","map","letter","i","key","concat","includes","current","disabled","onClick","count","match","RegExp","matches","Array","fill","toConsumableArray","selectLetter","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bf86dac.chunk.js","sourcesContent":["export const letters = 'abcdefghijklmnopqrstuvwxyz';\n\nexport const data = [\n\t{\n\t\tword: 'javascript',\n\t\thint: 'the language of the web'\n\t},\n\t{\n\t\tword: 'react',\n\t\thint: 'a front end framework known for using state'\n\t},\n\t{\n\t\tword: 'angular',\n\t\thint: 'a front end framework with two way data binding'\n\t},\n\t{\n\t\tword: 'docker',\n\t\thint: 'used to containerize applications'\n\t},\n\t{\n\t\tword: 'node',\n\t\thint: 'a javascript runtime environment'\n\t},\n\t{\n\t\tword: 'typescript',\n\t\thint: 'like javascript, but strongly typed'\n\t}\n];\n\nexport const getData = () => {\n\treturn data[Math.floor(Math.random() * data.length)]\n};\n\n","import styled, { keyframes } from 'styled-components';\n\nconst swing = keyframes`\n  0%,\n  50%,\n  100% {\n    transform: rotate(0);\n  }\n  25% {\n    transform: rotate(-1deg);\n  }\n  75% {\n    transform: rotate(1deg);\n  }\n`;\n\nconst draw = keyframes`\n  to {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst enter = keyframes`\n  from {\n    opacity: 0;\n  }\n`;\n\nexport const Container = styled.div`\n\tdisplay: grid;\n\twidth: 600px;\n\tgrid-template-columns: repeat(10, 1fr);\n\tgrid-template-rows: auto 3rem 200px;\n\tgrid-gap: 20px 0;\n\talign-items: center;\n`;\n\nexport const LettersButton = styled.button`\n\tcursor: pointer;\n\tbackground: transparent;\n\tfont-size: 1.25rem;\n\tcolor: #fff;\n\tborder: 2 px solid #fff;\n\n\t&:hover {\n\t\tbackground: rgba(255, 255, 255, 0.2);\n\t}\n\n\t&:disabled {\n\t\tbackground: transparent;\n\t\topacity: 0.2;\n\t}\n`;\n\nexport const GameButton = styled(LettersButton)`\n\tpadding: 0 16px;\n\theight: 44px;\n`;\n\nexport const GuessWord = styled.div`\n\tfont-size: 2rem;\n\theight: 3rem;\n\ttext-align: center;\n\tmargin: 0 5px;\n\topacity: ${props => (props.fade ? 0.3 : 1)};\n\ttransition: opacity 0.25s ease;\n\n\tcolor: #fff;\n\t${props => props && props.underline && `border-bottom: 5px solid #fff;`};\n`;\n\nexport const Hint = styled.div`\n\tfont-size: 2rem;\n\tcolor: #fff;\n\tgrid-column: 1 / -1;\n\tanimation: ${enter} 0.25s 0.25s ease both;\n\ttext-align: center;\n\tposition: relative;\n`\n\nexport const LetterOptions = styled.div`\n\tdisplay: grid;\n\tgrid-gap: 2px;\n\tgrid-template-columns: repeat(9, 44px);\n\tgrid-template-rows: repeat(3, 44px);\n\tgrid-column: 1 / -1;\n\talign-content: center;\n\tjustify-content: center;\n`;\n\nexport const GameMenu = styled.div`\n\tcolor: #fff;\n\tgrid-column: 1 / -1;\n\tanimation: ${enter} 0.25s 0.25s ease both;\n\ttext-align: center;\n\tposition: relative;\n`;\n\nexport const HangingMan = styled.svg`\n\theight: 180px;\n\t@media (min-width: 375px) and (min-height: 660px) {\n\t\theight: 320px;\n\t}\n\tpath,\n\tcircle {\n\t\tanimation-fill-mode: forwards;\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t\tstroke-width: 5px;\n\t\tfill: none;\n\t\tstroke: #fff;\n\t}\n`;\n\nexport const HangZone = styled.div`\n\tdisplay: block;\n\tgrid-column: 1 / -1;\n\ttext-align: center;\n`;\n\nexport const Swingers = styled.g`\n\ttransform-origin: 50% 0;\n\tanimation: ${swing} 3s infinite linear paused;\n\t${props =>\n\t\tprops.animate &&\n\t\t`\n    animation-play-state: running;\n  `};\n`;\n\nexport const Frame = styled.path`\n\td: path('M 5 195 L 5 5 L 100 5 M 50 5 L 5 50');\n\tstroke-dashoffset: 400;\n\tstroke-dasharray: 400;\n\tanimation: ${draw} 2s 1s ease;\n`;\n\nexport const Rope = styled.path`\n\td: path('M 100 5 L 100 30');\n\tstroke-dashoffset: 100;\n\tstroke-dasharray: 100;\n\tanimation: ${draw} 1s ease;\n`;\n\nexport const Head = styled.circle`\n\tcx: 100;\n\tcy: 50;\n\tr: 20;\n\tstroke-dashoffset: 150;\n\tstroke-dasharray: 150;\n\tanimation: ${draw} 1s ease;\n`;\n\nexport const Body = styled.path`\n\td: path('M 100 70 L 100 120');\n\tstroke-dashoffset: 200;\n\tstroke-dasharray: 200;\n\tanimation: ${draw} 1s ease;\n`;\n\nexport const Arms = styled.path`\n\td: path('M 90 110 L 100 80 L 110 110');\n\tstroke-dashoffset: 300;\n\tstroke-dasharray: 300;\n\tanimation: ${draw} 2s ease;\n`;\n\nexport const Legs = styled.path`\n\td: path('M 96 140 L 100 120 L 104 140');\n\tstroke-dashoffset: 300;\n\tstroke-dasharray: 300;\n\tanimation: ${draw} 2s ease;\n`;\n","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport { getData, letters, getWord } from './helpers';\nimport {\n  Container,\n  LettersButton,\n  HangZone,\n  HangingMan,\n  Hint,\n  Frame,\n  Swingers,\n  Rope,\n  Head,\n  Body,\n  Arms,\n  Legs,\n  GuessWord,\n  LetterOptions,\n  GameButton,\n  GameMenu\n} from './App.sc';\n\nconst App = () => {\n  const [fails, setFails] = useState([]);\n  const [successes, setSuccesses] = useState([]);\n  const [data, setData] = useState(getData())\n  // set previous word variable to catch repeats later on\n  const [prev, setPrev] = useState('')\n  const [startMenu, setStartMenu] = useState(true);\n  const threshold = useRef(5);\n\n  const selectLetter = letter => {\n    if (data.word.includes(letter)) {\n      const count = data.word.match(new RegExp(letter, 'g')).length;\n      const matches = new Array(count).fill().map(() => letter);\n      setSuccesses([...successes, ...matches]);\n    } else {\n      setFails([...fails, letter]);\n    }\n  };\n\n  const newGame = () => {\n    setData(getData());\n    // set previous word variable\n    setPrev(data.word)\n    setFails([]);\n    setSuccesses([]);\n  };\n\n  const menu = () => {\n    setStartMenu(false);\n  };\n\n  return (\n    <Container className=\"container\">\n      <HangZone>\n        <HangingMan preserveAspectRatio=\"xMinYMin\" viewBox=\"0 0 200 200\">\n          <Frame />\n          <Swingers animate={fails.length > 1}>\n            {fails.length >= 1 && <Rope />}\n            {fails.length >= 2 && <Head />}\n            {fails.length >= 3 && <Body />}\n            {fails.length >= 4 && <Arms />}\n            {fails.length >= 5 && <Legs />}\n          </Swingers>\n        </HangingMan>\n      </HangZone>\n\n      {/* catch repeated words */}\n      {data.word === prev && (\n        newGame()\n      )}\n\n      {!startMenu &&\n        data.word &&\n        data.word.split('').map((letter, i) => {\n          return (\n            <GuessWord\n              className=\"letters\"\n              key={`letters--${i}`}\n              underline={true}\n              fade={!successes.includes(letter)}>\n              {(successes.includes(letter) ||\n                fails.length === threshold.current) &&\n                letter}\n            </GuessWord>\n          );\n        })}\n      <Hint>\n        {!startMenu && (\n          data.hint\n        )\n        }\n      </Hint>\n      {!startMenu &&\n        data.word &&\n        fails.length !== threshold.current &&\n        successes.length !== data.word.length && (\n          <LetterOptions className=\"options\">\n            {letters.split('').map(letter => {\n              return (\n                <LettersButton\n                  disabled={\n                    successes.includes(letter) || fails.includes(letter)\n                  }\n                  key={`key--${letter}`}\n                  onClick={() => selectLetter(letter)}>\n                  {letter}\n                </LettersButton>\n              );\n            })}\n          </LetterOptions>\n        )}\n\n      {(fails.length === threshold.current ||\n        successes.length === data.word.length) &&\n        !startMenu && (\n          <GameMenu>\n            <h1>\n              {`${\n                successes.length === data.word.length\n                  ? 'YAY, YOU WIN!'\n                  : 'BOO, YOU LOSE!'\n                }`}\n            </h1>\n            <GameButton onClick={newGame}>New Game</GameButton>\n          </GameMenu>\n        )}\n\n      {startMenu && (\n        <GameMenu>\n          <h2>GUESS THE WEB DEV WORD!</h2>\n          <GameButton onClick={menu}>START</GameButton>\n        </GameMenu>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}