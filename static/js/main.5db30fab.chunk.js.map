{"version":3,"sources":["helpers.js","App.sc.js","App.js","serviceWorker.js","index.js"],"names":["words","getWord","Math","floor","random","length","swing","keyframes","_templateObject","draw","_templateObject2","enter","_templateObject3","Container","styled","div","_templateObject4","LettersButton","button","_templateObject5","GameButton","_templateObject6","GuessWord","_templateObject7","props","fade","underline","LetterOptions","_templateObject8","GameMenu","_templateObject9","HangingMan","svg","_templateObject10","HangZone","_templateObject11","Swingers","g","_templateObject12","animate","Frame","path","_templateObject13","Rope","_templateObject14","Head","circle","_templateObject15","Body","_templateObject16","Arms","_templateObject17","Legs","_templateObject18","App","_useState","useState","_useState2","Object","slicedToArray","fails","setFails","_useState3","_useState4","successes","setSuccesses","_useState5","_useState6","word","setWord","_useState7","_useState8","startMenu","setStartMenu","threshold","useRef","react_default","a","createElement","className","preserveAspectRatio","viewBox","split","map","letter","i","key","concat","includes","current","disabled","onClick","count","match","RegExp","matches","Array","fill","toConsumableArray","selectLetter","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5db30fab.chunk.js","sourcesContent":["export const letters = 'abcdefghijklmnopqrstuvwxyz';\n\nconst words = [\n\t'javascript',\n\t'react',\n\t'angular',\n\t'docker',\n\t'node',\n\t'typescript'\n];\n\nexport const getWord = () => {\n\treturn words[Math.floor(Math.random() * words.length)];\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst swing = keyframes`\n  0%,\n  50%,\n  100% {\n    transform: rotate(0);\n  }\n  25% {\n    transform: rotate(-1deg);\n  }\n  75% {\n    transform: rotate(1deg);\n  }\n`;\n\nconst draw = keyframes`\n  to {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst enter = keyframes`\n  from {\n    opacity: 0;\n  }\n`;\n\nexport const Container = styled.div`\n\tdisplay: grid;\n\twidth: 600px;\n\tgrid-template-columns: repeat(10, 1fr);\n\tgrid-template-rows: auto 3rem 200px;\n\tgrid-gap: 20px 0;\n\talign-items: center;\n`;\n\nexport const LettersButton = styled.button`\n\tcursor: pointer;\n\tbackground: transparent;\n\tfont-size: 1.25rem;\n\tcolor: #fff;\n\tborder: 2 px solid #fff;\n\n\t&:hover {\n\t\tbackground: rgba(255, 255, 255, 0.2);\n\t}\n\n\t&:disabled {\n\t\tbackground: transparent;\n\t\topacity: 0.2;\n\t}\n`;\n\nexport const GameButton = styled(LettersButton)`\n\tpadding: 0 16px;\n\theight: 44px;\n`;\n\nexport const GuessWord = styled.div`\n\tfont-size: 2rem;\n\theight: 3rem;\n\ttext-align: center;\n\tmargin: 0 5px;\n\topacity: ${props => (props.fade ? 0.3 : 1)};\n\ttransition: opacity 0.25s ease;\n\n\tcolor: #fff;\n\t${props => props && props.underline && `border-bottom: 5px solid #fff;`};\n`;\n\nexport const LetterOptions = styled.div`\n\tdisplay: grid;\n\tgrid-gap: 2px;\n\tgrid-template-columns: repeat(9, 44px);\n\tgrid-template-rows: repeat(3, 44px);\n\tgrid-column: 1 / -1;\n\talign-content: center;\n\tjustify-content: center;\n`;\n\nexport const GameMenu = styled.div`\n\tcolor: #fff;\n\tgrid-column: 1 / -1;\n\tanimation: ${enter} 0.25s 0.25s ease both;\n\ttext-align: center;\n\tposition: relative;\n`;\n\nexport const HangingMan = styled.svg`\n\theight: 180px;\n\t@media (min-width: 375px) and (min-height: 660px) {\n\t\theight: 320px;\n\t}\n\tpath,\n\tcircle {\n\t\tanimation-fill-mode: forwards;\n\t\tstroke-linejoin: round;\n\t\tstroke-linecap: round;\n\t\tstroke-width: 5px;\n\t\tfill: none;\n\t\tstroke: #fff;\n\t}\n`;\n\nexport const HangZone = styled.div`\n\tdisplay: block;\n\tgrid-column: 1 / -1;\n\ttext-align: center;\n`;\n\nexport const Swingers = styled.g`\n\ttransform-origin: 50% 0;\n\tanimation: ${swing} 3s infinite linear paused;\n\t${props =>\n\t\tprops.animate &&\n\t\t`\n    animation-play-state: running;\n  `};\n`;\n\nexport const Frame = styled.path`\n\td: path('M 5 195 L 5 5 L 100 5 M 50 5 L 5 50');\n\tstroke-dashoffset: 400;\n\tstroke-dasharray: 400;\n\tanimation: ${draw} 2s 1s ease;\n`;\n\nexport const Rope = styled.path`\n\td: path('M 100 5 L 100 30');\n\tstroke-dashoffset: 100;\n\tstroke-dasharray: 100;\n\tanimation: ${draw} 1s ease;\n`;\n\nexport const Head = styled.circle`\n\tcx: 100;\n\tcy: 50;\n\tr: 20;\n\tstroke-dashoffset: 150;\n\tstroke-dasharray: 150;\n\tanimation: ${draw} 1s ease;\n`;\n\nexport const Body = styled.path`\n\td: path('M 100 70 L 100 120');\n\tstroke-dashoffset: 200;\n\tstroke-dasharray: 200;\n\tanimation: ${draw} 1s ease;\n`;\n\nexport const Arms = styled.path`\n\td: path('M 90 110 L 100 80 L 110 110');\n\tstroke-dashoffset: 300;\n\tstroke-dasharray: 300;\n\tanimation: ${draw} 2s ease;\n`;\n\nexport const Legs = styled.path`\n\td: path('M 96 140 L 100 120 L 104 140');\n\tstroke-dashoffset: 300;\n\tstroke-dasharray: 300;\n\tanimation: ${draw} 2s ease;\n`;\n","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport { letters, getWord } from './helpers';\nimport {\n\tContainer,\n\tLettersButton,\n\tHangZone,\n\tHangingMan,\n\tFrame,\n\tSwingers,\n\tRope,\n\tHead,\n\tBody,\n\tArms,\n\tLegs,\n\tGuessWord,\n\tLetterOptions,\n\tGameMenu,\n\tGameButton\n} from './App.sc';\n\nconst App = () => {\n\tconst [fails, setFails] = useState([]);\n\tconst [successes, setSuccesses] = useState([]);\n\tconst [word, setWord] = useState(getWord());\n\tconst [startMenu, setStartMenu] = useState(true);\n\tconst threshold = useRef(5);\n\n\tconst selectLetter = letter => {\n\t\tif (word.includes(letter)) {\n\t\t\tconst count = word.match(new RegExp(letter, 'g')).length;\n\t\t\tconst matches = new Array(count).fill().map(() => letter);\n\t\t\tsetSuccesses([...successes, ...matches]);\n\t\t} else {\n\t\t\tsetFails([...fails, letter]);\n\t\t}\n\t};\n\n\tconst newGame = () => {\n\t\tsetWord(getWord());\n\t\tsetFails([]);\n\t\tsetSuccesses([]);\n\t};\n\n\tconst menu = () => {\n\t\tsetStartMenu(false);\n\t};\n\n\treturn (\n\t\t<Container className=\"container\">\n\t\t\t<HangZone>\n\t\t\t\t<HangingMan preserveAspectRatio=\"xMinYMin\" viewBox=\"0 0 200 200\">\n\t\t\t\t\t<Frame />\n\t\t\t\t\t<Swingers animate={fails.length > 1}>\n\t\t\t\t\t\t{fails.length >= 1 && <Rope />}\n\t\t\t\t\t\t{fails.length >= 2 && <Head />}\n\t\t\t\t\t\t{fails.length >= 3 && <Body />}\n\t\t\t\t\t\t{fails.length >= 4 && <Arms />}\n\t\t\t\t\t\t{fails.length >= 5 && <Legs />}\n\t\t\t\t\t</Swingers>\n\t\t\t\t</HangingMan>\n\t\t\t</HangZone>\n\n\t\t\t{!startMenu &&\n\t\t\t\tword &&\n\t\t\t\tword.split('').map((letter, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<GuessWord\n\t\t\t\t\t\t\tclassName=\"letters\"\n\t\t\t\t\t\t\tkey={`letters--${i}`}\n\t\t\t\t\t\t\tunderline={true}\n\t\t\t\t\t\t\tfade={!successes.includes(letter)}>\n\t\t\t\t\t\t\t{(successes.includes(letter) ||\n\t\t\t\t\t\t\t\tfails.length === threshold.current) &&\n\t\t\t\t\t\t\t\tletter}\n\t\t\t\t\t\t</GuessWord>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t{!startMenu &&\n\t\t\t\tword &&\n\t\t\t\tfails.length !== threshold.current &&\n\t\t\t\tsuccesses.length !== word.length && (\n\t\t\t\t\t<LetterOptions className=\"options\">\n\t\t\t\t\t\t{letters.split('').map(letter => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<LettersButton\n\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\tsuccesses.includes(letter) || fails.includes(letter)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tkey={`key--${letter}`}\n\t\t\t\t\t\t\t\t\tonClick={() => selectLetter(letter)}>\n\t\t\t\t\t\t\t\t\t{letter}\n\t\t\t\t\t\t\t\t</LettersButton>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</LetterOptions>\n\t\t\t\t)}\n\n\t\t\t{(fails.length === threshold.current ||\n\t\t\t\tsuccesses.length === word.length) &&\n\t\t\t\t!startMenu && (\n\t\t\t\t\t<GameMenu>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t{`${\n\t\t\t\t\t\t\t\tsuccesses.length === word.length\n\t\t\t\t\t\t\t\t\t? 'YAY, YOU WIN!'\n\t\t\t\t\t\t\t\t\t: 'BOO, YOU LOSE!'\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<GameButton onClick={newGame}>New Game</GameButton>\n\t\t\t\t\t</GameMenu>\n\t\t\t\t)}\n\n\t\t\t{startMenu && (\n\t\t\t\t<GameMenu>\n\t\t\t\t\t<h2>GUESS THE WEB DEV WORD!</h2>\n\t\t\t\t\t<GameButton onClick={menu}>START</GameButton>\n\t\t\t\t</GameMenu>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}